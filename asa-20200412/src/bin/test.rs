fn main() {
    let mut x = "foo".to_string();

    // x に対する不変借用をとる。
    // レキシカルスコープに基づくと、 y のライフタイムは y がスコープを抜けるまで（= main 関数が終了するまで)となる。
    // 借用規則により、 y が生存している間は、 x に対する可変の借用をとることはできない。
    let y = &x;
    println!("{}", y);  // (1)

    // x に対する可変借用をとろうとする。
    // 不変借用 y が生存しているので、コンパイルエラーになる
    let z = &mut x; // (2)
    z.push_str("bar");
    println!("{}", z);
}
